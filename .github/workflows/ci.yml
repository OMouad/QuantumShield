name: CI (Build, SBOM, Scans)

on:
  push:
    branches: ["**"]
  pull_request:
  schedule:
    - cron: '0 3 * * 1' # weekly run (Mon 03:00 UTC)
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner (audit)
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Install unzip (Linux runners)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip

      - name: Install tools for act (curl, unzip)
        if: ${{ env.ACT }}
        run: |
          apt-get update
          apt-get install -y curl unzip

      - name: Install Maven 3.9.9 for act
        if: ${{ env.ACT }}
        run: |
          curl -fsSL -o /tmp/maven.tgz https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
          tar -xzf /tmp/maven.tgz -C /opt
          ln -s /opt/apache-maven-3.9.9 /opt/maven
          echo "/opt/maven/bin" >> "$GITHUB_PATH"

      - name: Install Maven 3.9.9 (GitHub runner)
        if: ${{ !env.ACT }}
        run: |
          curl -fsSL -o /tmp/maven.tgz https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
          sudo tar -xzf /tmp/maven.tgz -C /opt
          sudo ln -s /opt/apache-maven-3.9.9 /opt/maven
          echo "/opt/maven/bin" >> "$GITHUB_PATH"

      - name: Ensure mvnw is executable
        run: chmod +x mvnw

      - name: Fix mvnw line endings for act
        if: ${{ env.ACT }}
        run: sed -i 's/\r$//' mvnw

      - name: Build and test (root) [act]
        if: ${{ env.ACT }}
        run: mvn -B -ntp -Dstyle.color=always clean verify

      - name: Build and test (root)
        if: ${{ !env.ACT }}
        run: mvn -B -ntp -Dstyle.color=always clean verify

      - name: Upload CA artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quantumshield-pki-jar
          path: services/certificate-authority/target/*-SNAPSHOT.jar
          if-no-files-found: ignore

  sbom:
    name: Generate SBOM (CycloneDX)
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
    steps:
      - name: Harden Runner (audit)
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Install unzip (Linux runners)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip

      - name: Install tools for act (curl, unzip)
        if: ${{ env.ACT }}
        run: |
          apt-get update
          apt-get install -y curl unzip

      - name: Install Maven 3.9.9 for act
        if: ${{ env.ACT }}
        run: |
          curl -fsSL -o /tmp/maven.tgz https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
          tar -xzf /tmp/maven.tgz -C /opt
          ln -s /opt/apache-maven-3.9.9 /opt/maven
          echo "/opt/maven/bin" >> "$GITHUB_PATH"

      - name: Install Maven 3.9.9 (GitHub runner)
        if: ${{ !env.ACT }}
        run: |
          curl -fsSL -o /tmp/maven.tgz https://archive.apache.org/dist/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.tar.gz
          sudo tar -xzf /tmp/maven.tgz -C /opt
          sudo ln -s /opt/apache-maven-3.9.9 /opt/maven
          echo "/opt/maven/bin" >> "$GITHUB_PATH"

      - name: Ensure mvnw is executable
        run: chmod +x mvnw

      - name: Fix mvnw line endings for act
        if: ${{ env.ACT }}
        run: sed -i 's/\r$//' mvnw

      - name: Generate CycloneDX SBOM (aggregate) [act]
        if: ${{ env.ACT }}
        run: mvn -B -ntp org.cyclonedx:cyclonedx-maven-plugin:2.9.0:makeAggregateBom

      - name: Generate CycloneDX SBOM (aggregate)
        if: ${{ !env.ACT }}
        run: mvn -B -ntp org.cyclonedx:cyclonedx-maven-plugin:2.9.0:makeAggregateBom

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: |-
            target/bom.json
            target/bom.xml
          if-no-files-found: ignore

  secrets:
    name: Secrets Scan (Gitleaks)
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - name: Harden Runner (audit)
        uses: step-security/harden-runner@v2
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: --redact --report-format sarif --report-path results.sarif --no-git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF to code scanning
        if: ${{ !env.ACT && hashFiles('results.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif
